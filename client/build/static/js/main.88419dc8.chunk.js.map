{"version":3,"sources":["helperFunctions/filters.js","components/ActivityForm/ActivityForm.jsx","actions/index.js","components/ActivityDetail/ActivityDetail.jsx","components/CountryDetail/CountryDetail.jsx","components/Search/Search.jsx","components/NavBar/NavBar.jsx","pages/CountryActivities/CountryActivities.jsx","components/Country/Country.jsx","components/PaginationBar/PaginationBar.jsx","components/CountriesDisplay/CountriesDisplay.jsx","components/Filter/Filter.jsx","components/FilterDisplay/FilterDisplay.jsx","pages/Home/Home.jsx","pages/LandingPage/LandingPage.jsx","App.js","reportWebVitals.js","helperFunctions/filterCountriesBy.js","reducer/index.js","store/index.js","index.js"],"names":["orderByName","countries","order","result","sort","a","b","nameA","name","toUpperCase","nameB","continent","filter","country","activityId","c","activities","map","id","includes","Number","parseInt","population","ActivityForm","countriesList","useSelector","state","initialState","duration","difficulty","season","countriesId","useState","activity","setActivity","errors","setError","disabled","setDisabled","validate","input","length","disableCreateButton","error","activityHandler","e","target","value","action","className","htmlFor","onChange","type","required","placeholder","diff","index","indexOf","addCountry","onClick","dataset","removeCountry","find","axios","post","then","r","data","d","console","log","to","GET_COUNTRIES_URL","FILTER_COUNTRIES","RESET_PAGINATION","FORWARD_PAGE","GOBACK_PAGE","GET_COUNTRIES","RECIVED_COUNTRIES","RECIVED_DETAIL","getCountries","filterCountries","filterBy","payload","fetchCountries","url","dispatch","resetPagination","get","rows","message","msg","recivedCountries","catch","fetchCountryDetail","countryId","res","countryDetail","ActivityDetail","durationTime","CountryDetail","isLoading","Fragment","src","flagURI","alt","capital","subregion","areaKm2","Search","props","useDispatch","searchByName","setSearchByName","onSubmit","preventDefault","event","NavBar","CountryActivities","useParams","useEffect","Country","PaginationBar","pagination","start","end","CountriesDisplay","page","slice","Filter","title","options","applyFilter","turnOffFilter","filterOn","onChangeHandler","option","FilterDisplay","filters","continents","setContinents","setActivities","getContinents","getActivities","getOrdersOptions","reduce","push","Home","filteredList","filteredCountries","filtersApplied","setCountries","setFilters","checkFilters","Object","keys","forEach","key","LandingPage","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","filtered","STEP","hasNext","hasPrev","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","filterCountriesBy","applyMiddleware","thunkMiddleware","dotenv","config","defaults","baseURL","process","REACT_APP_API","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88419dc8.chunk.js","sourcesContent":["export const filterByContinent = (countries, continent) =>\n  countries.filter((country) => country.continent === continent);\n\nexport const filterByActivity = (countries, activityId) => {\n  return countries.filter((c) =>\n    c.activities.map((a) => a.id).includes(Number.parseInt(activityId))\n  );\n};\n\nexport const orderByPopulation = (countries, order) =>\n  countries.sort(function (a, b) {\n    return order * (a.population - b.population);\n  });\n\nexport const orderByName = (countries, order) => {\n  let result = [...countries];\n  result.sort(function (a, b) {\n    var nameA = a.name.toUpperCase();\n    var nameB = b.name.toUpperCase();\n    if (nameA < nameB) {\n      return -1 * order;\n    }\n    if (nameA > nameB) {\n      return 1 * order;\n    }\n    return 0;\n  });\n  return result;\n};\n\nexport default {\n  continent: filterByContinent,\n  activityId: filterByActivity,\n  population: orderByPopulation,\n  name: orderByName,\n};\n","import axios from \"axios\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { orderByName } from \"../../helperFunctions/filters\";\nimport \"./ActivityForm.css\";\n\nexport default function ActivityForm() {\n  const countriesList = useSelector((state) => state.countriesList);\n\n  const difficulty = [1, 2, 3, 4, 5];\n  const season = [\"Winter\", \"Spring\", \"Summer\", \"Autumn\"];\n\n  const initialState = {\n    name: \"\",\n    duration: \"\",\n    difficulty: \"\",\n    season: \"\",\n    countriesId: [],\n  };\n\n  const [activity, setActivity] = useState(initialState);\n  const [errors, setError] = useState({});\n  const [disabled, setDisabled] = useState(true);\n\n  const validate = (input) => {\n    const errors = {};\n    if (!input.name) {\n      errors.name = \"Activity name is required\";\n    }\n    if (\n      Number.parseInt(input.duration) < 15 ||\n      Number.parseInt(input.duration) > 240\n    ) {\n      errors.duration = \"Duration is invalid\";\n    }\n    if (!input.difficulty) {\n      errors.difficulty = \"Difficulty is required\";\n    }\n    if (!input.season) {\n      errors.season = \"Season is invalid\";\n    }\n    if (!input.countriesId.length) {\n      errors.countriesId = \"No countries selected\";\n    }\n    return errors;\n  };\n  const disableCreateButton = (activity) => {\n    let errors = validate(activity);\n    for (const error in errors) {\n      return true;\n    }\n    return false;\n  };\n\n  const activityHandler = (e) => {\n    let input = {};\n    setActivity((activity) => {\n      input = {\n        ...activity,\n        [e.target.name]: e.target.value,\n      };\n      return input;\n    });\n    setError((errors) => {\n      let res = {\n        ...errors,\n        [e.target.name]: validate(input)[e.target.name],\n      };\n      return res;\n    });\n    setDisabled(() => disableCreateButton(input));\n  };\n\n  const addCountry = (e) => {\n    setActivity((activity) => {\n      // to avoid repetitions\n      return activity.countriesId.indexOf(e.target.value) >= 0\n        ? { ...activity }\n        : {\n            ...activity,\n            countriesId: [...activity.countriesId, e.target.value],\n          };\n    });\n  };\n  const removeCountry = (e) => {\n    setActivity((activity) => {\n      return {\n        ...activity,\n        countriesId: activity.countriesId.filter(\n          (c) => c !== e.target.dataset.value\n        ),\n      };\n    });\n  };\n\n  const resetHandler = () => {\n    setActivity(initialState);\n    setDisabled(() => disableCreateButton(initialState));\n  };\n\n  const onSubmit = () => {\n    axios\n      .post(\"http://localhost:3001/activity\", activity)\n      .then((r) => r.data)\n      .then((d) => console.log(d));\n  };\n\n  return (\n    <div id=\"activity-form-wrap\">\n      <form action=\"\" id=\"activity-form\">\n        <h2>Create an Activity</h2>\n        <section>\n          <div className=\"field-set\">\n            <label htmlFor=\"name\">Activity name:</label>\n            <input\n              onChange={(e) => activityHandler(e)}\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              value={activity.name}\n              key=\"name-imput\"\n              required\n            />\n            <label\n              htmlFor=\"name\"\n              className={errors.name ? \"warning\" : \"hidden\"}\n            >\n              {errors.name}\n            </label>\n          </div>\n          <div className=\"field-set\">\n            <label htmlFor=\"minutes\">Activity duration:</label>\n            <input\n              onChange={(e) => activityHandler(e)}\n              type=\"number\"\n              placeholder=\"duracion debe ser de 15 a 240 minutos\"\n              name=\"duration\"\n              id=\"minutes\"\n              value={activity.duration}\n              key=\"durantion-inpu\"\n              required\n            />\n            <label\n              htmlFor=\"minutes\"\n              className={errors.duration ? \"warning\" : \"hidden\"}\n            >\n              {errors.duration}\n            </label>\n          </div>\n          <fieldset>\n            <legend>How difficult is:</legend>\n            <div>\n              {difficulty.map((diff) => (\n                <>\n                  <input\n                    key={`difficulty ${diff}`}\n                    onChange={(e) => activityHandler(e)}\n                    type=\"radio\"\n                    id={`difficulty ${diff}`}\n                    name=\"difficulty\"\n                    value={diff}\n                  />\n                  <label htmlFor={`difficulty ${diff}`}>{diff}</label>\n                </>\n              ))}\n              <label className={errors.difficulty ? \"warning\" : \"hidden\"}>\n                {errors.difficulty}\n              </label>\n            </div>\n          </fieldset>\n\n          <fieldset>\n            <legend>Choose the season in which take place:</legend>\n            <div>\n              {season.map((season, index) => (\n                <>\n                  <input\n                    key={`season${index + 1}`}\n                    onChange={(e) => activityHandler(e)}\n                    type=\"radio\"\n                    id={`season${index + 1}`}\n                    name=\"season\"\n                    value={season}\n                  />\n                  <label htmlFor={`season${index + 1}`}>{season}</label>\n                </>\n              ))}\n            </div>\n          </fieldset>\n        </section>\n\n        <section>\n          <div className=\"field-set\">\n            <select onChange={(e) => addCountry(e)} name=\"country\" id=\"country\">\n              <option key=\"c-0\" value=\"\">\n                --Please choose one or more countries--\n              </option>\n              {orderByName(countriesList, 1).map((country) => (\n                <option key={`country-${country.id}`} value={country.id}>\n                  {country.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"field-set\">\n            {activity.countriesId.map((country) => (\n              <span\n                onClick={(e) => removeCountry(e)}\n                className=\"selected-countries\"\n                key={country}\n                name={country}\n                data-value={country}\n              >\n                {\n                  countriesList.find((c) => c.id === Number.parseInt(country))\n                    .name\n                }{\" \"}\n                X\n              </span>\n            ))}\n          </div>\n        </section>\n\n        <section>\n          <p>\n            <button type=\"reset\" onClick={resetHandler}>\n              Reset\n            </button>\n            <button onClick={onSubmit} type=\"button\" disabled={disabled}>\n              Create\n            </button>\n          </p>\n          <Link to=\"../countries\">Go Back</Link>\n        </section>\n      </form>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nexport const PAGINATION_STEP = 10;\nexport const GET_COUNTRIES_URL = \"/countries\";\n\n// Actions\nexport const FILTER_COUNTRIES = \"FILTERED\";\nexport const RESET_PAGINATION = \"RESET_PAGINATION\";\nexport const FORWARD_PAGE = \"FORWARD_PAGE\";\nexport const GOBACK_PAGE = \"GOBACK_PAGE\";\nexport const GET_COUNTRIES = \"GET_COUNTRIES\";\nexport const RECIVED_COUNTRIES = \"RECIVED_COUNTRIES\";\nexport const RECIVED_DETAIL = \"RECIVED_DETAIL\";\n\n// Action Creators\nexport function getCountries() {\n  return {\n    type: GET_COUNTRIES,\n  };\n}\nexport function recivedCountries(countries, message) {\n  return {\n    type: RECIVED_COUNTRIES,\n    payload: { countries, message },\n  };\n}\n\nexport function filterCountries(filterBy) {\n  return {\n    type: FILTER_COUNTRIES,\n    payload: filterBy,\n  };\n}\n\nexport function fetchCountries(name) {\n  let url = name ? `${GET_COUNTRIES_URL}?name=${name}` : GET_COUNTRIES_URL;\n  return function (dispatch) {\n    dispatch(getCountries());\n    dispatch(resetPagination());\n    axios\n      .get(url)\n      .then((r) => r.data)\n      .then((data) => {\n        let countries = data.rows || [];\n        let message = data.msg || \"\";\n        dispatch(recivedCountries(countries, message));\n      })\n      .catch((e) => console.log(e));\n  };\n}\n\nexport function resetPagination() {\n  return {\n    type: RESET_PAGINATION,\n  };\n}\n\nexport function forwardPage() {\n  return {\n    type: FORWARD_PAGE,\n  };\n}\nexport function goBackPage() {\n  return {\n    type: GOBACK_PAGE,\n  };\n}\n\nexport function recivedDetail(country) {\n  return {\n    type: RECIVED_DETAIL,\n    payload: country,\n  };\n}\n\nexport function fetchCountryDetail(countryId) {\n  const url = `${GET_COUNTRIES_URL}/${countryId}`;\n  return function (dispatch) {\n    dispatch(getCountries());\n    axios\n      .get(url)\n      .then((res) => res.data)\n      .then((countryDetail) => dispatch(recivedDetail(countryDetail)))\n      .catch((e) => console.log(e));\n  };\n}\n","export default function ActivityDetail({\n  name,\n  difficulty,\n  durationTime,\n  season,\n}) {\n    return <div id=\"activity-detail-wrap\">\n        <h2>{name}</h2>\n        <h3>To do in: {season}</h3>\n        <h4>Difficulty: {difficulty}</h4>\n        <h4>Duration: {durationTime}</h4>\n    </div>\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport ActivityDetail from \"../ActivityDetail/ActivityDetail\";\n\nimport \"./CountryDetail.css\";\n\nexport default function CountryDetail({ country, activities }) {\n  // const country = useSelector((state) => state.countryDetail);\n  const isLoading = useSelector((state) => state.isLoading);\n\n  return (\n    <div id=\"country-detail-wrap\">\n      {isLoading ? (\n        <h2>Loading</h2>\n      ) : (\n        <React.Fragment>\n          <div id=\"country-detail-center\">\n            <img src={country.flagURI} alt=\"flag of the country\" />\n            <h2>\n              {country.name} - {country.countryId}\n            </h2>\n            <h3> {country.continent} </h3>\n            <h3>Capital: {country.capital} </h3>\n            <h3>Subregion: {country.subregion} </h3>\n            <h3>Area: {country.areaKm2} </h3>\n            <h3>Population: {country.population} </h3>\n          </div>\n          <div id=\"activity-detail-center\">\n            {activities && activities.length > 0 ? (\n              activities.map((activity) => (\n                <ActivityDetail\n                  name={activity.name}\n                  difficulty={activity.difficulty}\n                  durationTime={activity.durationTime}\n                  season={activity.season}\n                />\n              ))\n            ) : (\n              <h3>No activities availables yet...</h3>\n            )}\n          </div>\n          <Link to=\"../countries\">Go Back</Link>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchCountries } from \"../../actions\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport \"./Search.css\";\n\nexport default function Search(props) {\n  const dispatch = useDispatch();\n\n  const [searchByName, setSearchByName] = useState(\"\");\n\n  const onChangeHandler = (event) => {\n    setSearchByName(() => event.target.value);\n  };\n  const onSearchHandler = (event) => {\n    event.preventDefault();\n    dispatch(fetchCountries(searchByName));\n  };\n  const turnOffSearch = () => {\n    setSearchByName(() => \"\");\n    dispatch(fetchCountries());\n  };\n  return (\n    <div id=\"search-wrap\">\n      <form\n        id=\"#search-form\"\n        action=\"submit\"\n        onSubmit={(e) => onSearchHandler(e)}\n      >\n        <input\n          id=\"search_country_name\"\n          name=\"name\"\n          type=\"search\"\n          placeholder=\"search countries by name..\"\n          value={searchByName}\n          onChange={(e) => onChangeHandler(e)}\n        />{\" \"}\n        <button type=\"submit\">\n          {searchByName ? <AiOutlineClose onClick={turnOffSearch} /> : \"\"}\n          <span>|</span> <FaSearch />{\" \"}\n        </button>\n      </form>\n    </div>\n  );\n}\n","import { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { fetchCountries } from \"../../actions\";\nimport Search from \"../Search/Search\";\nimport \"./NavBar.css\";\n\nexport default function NavBar() {\n  const dispatch = useDispatch();\n\n  const goHomeHandler = () => {\n    dispatch(fetchCountries());\n  };\n\n  const goTaAddActivity = () => {\n    dispatch(fetchCountries());\n  };\n\n  return (\n    <div id=\"navbar-wrap\">\n      <div id=\"navbar-center\">\n        <Link to=\"/countries\" onClick={goHomeHandler} id=\"navbar-title\">\n          Henry Countries\n        </Link>\n        <Search />\n        <Link to=\"/add_activity\" onClick={goTaAddActivity}>\n          Add Activity\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { fetchCountryDetail } from \"../../actions\";\nimport CountryDetail from \"../../components/CountryDetail/CountryDetail\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport \"./CountryActivities.css\";\n\nexport default function CountryActivities() {\n  const dispatch = useDispatch();\n  const { countryId } = useParams();\n  const country = useSelector((state) => state.countryDetail);\n\n  useEffect(() => dispatch(fetchCountryDetail(countryId)), []);\n\n  return (\n    <React.Fragment>\n      <NavBar />\n      <CountryDetail country={country} activities={country.activities} />\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Country.css\";\n\nexport default function Country({ countryId, flagURI, name, continent }) {\n  return (\n    <div id=\"country-wrap\">\n      <Link to={`${countryId}`} id={countryId}>\n        <img src={flagURI} alt=\"flag of the country\" />\n        <h2>{name}</h2>\n        <h3>{continent}</h3>\n      </Link>\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { forwardPage, goBackPage } from \"../../actions\";\nimport \"./PaginationBar.css\";\n\nexport default function PaginationBar({countries}) {\n  const dispatch = useDispatch();\n  const pagination = useSelector((state) => state.pagination);\n\n  const goForward = () => {\n    dispatch(forwardPage());\n  };\n\n  const goBack = () => {\n    dispatch(goBackPage());\n  };\n\n  const hasNext = () => {\n    return pagination.end >= countries.length ? false : true;\n  };\n  const hasPrev = () => {\n    return pagination.start > 0 ? true : false;\n  };\n\n  return (\n    <div id=\"pagination-wrap\">\n      {hasPrev() ? (\n        <span onClick={goBack}>Previous</span>\n      ) : (\n        <span className=\"disabled\">Nathing here</span>\n      )}\n      {hasNext() ? (\n        <span onClick={goForward}>Next</span>\n      ) : (\n        <span className=\"disabled\">Nathing here</span>\n      )}\n    </div>\n  );\n}\n","// import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Country from \"../Country/Country\";\nimport PaginationBar from \"../PaginationBar/PaginationBar\";\nimport \"./CountriesDisplay.css\";\n\nexport default function CountriesDisplay({ countries, message }) {\n  const isLoading = useSelector((state) => state.isLoading);\n  const page = useSelector((state) => state.pagination);\n\n  return (\n    <div id=\"countries-display-wrap\">\n      <div id=\"countries-display-center\">\n        {console.log(`Countries Display MESSAGE: ${message}`)}\n        {isLoading ? (\n          <h2>Loading</h2>\n        ) : message ? (\n          <h2>{message}</h2>\n        ) : (\n          countries\n            .slice(page.start, page.end)\n            .map((country) => (\n              <Country\n                key={country.countryId}\n                countryId={country.id}\n                name={country.name}\n                continent={country.continent}\n                flagURI={country.flagURI}\n              />\n            ))\n        )}\n      </div>\n      <PaginationBar countries={countries} />\n    </div>\n  );\n}","import \"./Filter.css\";\n// la prop options espero un array de objs -> {id: to use as value, name: to show the user}\nexport default function Filter({\n  title,\n  filter,\n  options,\n  applyFilter,\n  filterOn,\n  turnOffFilter,\n}) {\n  const onChangeHandler = (e) => {\n    filter.value = e.target.value;\n    applyFilter(filter);\n  };\n  return (\n    <div className=\"filter-wrap\">\n      <select\n        onChange={(e) => onChangeHandler(e)}\n        name={`selec_${filter.type}`}\n        id={`selec_${filter.type}`}\n      >\n        <option value=\"\" onClick={() => turnOffFilter(filter)}>\n          {title}\n        </option>\n        {options.map((option) => (\n          <option key={option.id} value={option.id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport Filter from \"../Filter/Filter\";\nimport \"./FilterDisplay.css\";\n\nexport default function FilterDisplay({\n  countries,\n  applyFilter,\n  turnOffFilter,\n  filters,\n}) {\n  const [continents, setContinents] = useState(() => []);\n  const [activities, setActivities] = useState(() => []);\n\n  useEffect(() => {\n    setContinents(() => getContinents(countries));\n    setActivities(() => getActivities(countries));\n  }, [countries]);\n\n  return (\n    <div id=\"filter-display-wrap\">\n      <div id=\"filter-display-center\">\n        <Filter\n          title=\"--Filter by continent--\"\n          filter={{ type: \"continent\" }}\n          options={continents.map((c) => ({ id: c, name: c }))}\n          applyFilter={applyFilter}\n          filterOn={filters.continent}\n          turnOffFilter={turnOffFilter}\n        />\n        <Filter\n          title=\"--filter by activities--\"\n          filter={{ type: \"activityId\" }}\n          options={activities}\n          applyFilter={applyFilter}\n          filterOn={filters.activityId}\n          turnOffFilter={turnOffFilter}\n        />\n        <Filter\n          title=\"--order by country name--\"\n          filter={{ type: \"name\" }}\n          options={getOrdersOptions()}\n          applyFilter={applyFilter}\n          filterOn={filters.name}\n          turnOffFilter={turnOffFilter}\n        />\n        <Filter\n          title=\"--order by population--\"\n          filter={{ type: \"population\" }}\n          options={getOrdersOptions()}\n          applyFilter={applyFilter}\n          filterOn={filters.population}\n          turnOffFilter={turnOffFilter}\n        />\n      </div>\n    </div>\n  );\n}\n\n// options espera un array de obj = {id:, value:,}\nconst getContinents = (countries) =>\n  countries.reduce((result, country) => {\n    if (result.indexOf(country.continent) < 0) {\n      result.push(country.continent);\n    }\n    return result;\n  }, []);\n\nconst getActivities = (countries) =>\n  countries.reduce((result, country) => {\n    for (const activity of country.activities) {\n      if (result.map((a) => a.id).indexOf(activity.id) < 0) {\n        result.push({ id: activity.id, name: activity.name });\n      }\n    }\n    return result;\n  }, []);\n\nconst getOrdersOptions = () => {\n  return [\n    { id: 1, name: \"up\" },\n    { id: -1, name: \"down\" },\n  ];\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchCountries,\n  filterCountries,\n  resetPagination,\n} from \"../../actions\";\nimport CountriesDisplay from \"../../components/CountriesDisplay/CountriesDisplay\";\nimport FilterDisplay from \"../../components/FilterDisplay/FilterDisplay\";\nimport NavBar from \"../../components/NavBar/NavBar\";\n\nexport default function Home() {\n  const dispatch = useDispatch();\n  const message = useSelector((state) => state.message);\n  const countriesList = useSelector((state) => state.countriesList);\n  const filteredList = useSelector((state) => state.filteredCountries);\n  const filtersApplied = useSelector((state) => state.filtersApplied);\n  const [countries, setCountries] = useState([]);\n  const [filters, setFilters] = useState([]);\n\n  useEffect(() => {\n    dispatch(fetchCountries());\n    setFilters(() => filtersApplied);\n  }, []);\n\n  useEffect(() => {\n    setFilters(() => filtersApplied);\n    setCountries(() => {\n      if (checkFilters(filtersApplied)) {\n        dispatch(resetPagination());\n        dispatch(filterCountries(filtersApplied));\n        return filteredList;\n      } else {\n        return countriesList;\n      }\n    });\n  }, [countriesList]);\n\n  useEffect(() => {\n    setFilters(() => filtersApplied);\n    setCountries(() => {\n      if (filtersApplied) {\n        return filteredList;\n      } else {\n        return countriesList;\n      }\n    });\n  }, [filteredList]);\n\n  const applyFilter = (filter) => {\n    let filterBy = {\n      ...filters,\n      [filter.type]: filter.value,\n    };\n    dispatch(resetPagination());\n    dispatch(filterCountries(filterBy));\n  };\n\n  const turnOffFilter = (filter) => {\n    let filterBy = {\n      ...filters,\n      [filter.type]: false,\n    };\n    dispatch(resetPagination());\n    dispatch(filterCountries(filterBy));\n  };\n\n  return (\n    <React.Fragment>\n      <NavBar />\n      <FilterDisplay\n        countries={countries}\n        filters={filters}\n        applyFilter={applyFilter}\n        turnOffFilter={turnOffFilter}\n      />\n      <CountriesDisplay countries={countries} message={message} />\n    </React.Fragment>\n  );\n}\nconst checkFilters = (filterBy) => {\n  let result = false;\n  Object.keys(filterBy).forEach((key) => (result = result || filterBy[key]));\n  return result;\n};\n","import { Link } from \"react-router-dom\";\nimport \"./LandingPage.css\";\nexport default function LandingPage() {\n  return (\n    <div id=\"landing-page-wrap\">\n      <div id=\"landing-page-center\">\n        <h1 id=\"landing-page-title\">Henry Countries</h1>\n        <Link to=\"countries\">Let's travel</Link>\n      </div>\n    </div>\n  );\n}\n","import { Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport ActivityForm from \"./components/ActivityForm/ActivityForm\";\nimport CountryActivities from \"./pages/CountryActivities/CountryActivities\";\nimport Home from \"./pages/Home/Home\";\nimport LandingPage from \"./pages/LandingPage/LandingPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={<LandingPage />} />\n        <Route path=\"/countries/\" element={<Home />} />\n        <Route path=\"/countries/:countryId\" element={<CountryActivities />} />\n        <Route path=\"/add_activity\" element={<ActivityForm />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import filters from \"./filters\";\n\n// filterBy -> {continent: 'un continente', population: 1 || -1, etc}\nexport default (countries, filterBy) => {\n  let filtered = [...countries];\n  filterBy = filterBy || {};\n\n  Object.keys(filterBy).forEach((key) => {\n    if (filterBy[key]) {\n      filtered = filters[key](filtered, filterBy[key]);\n    }\n  });\n\n  return filtered;\n};","import {\n  FORWARD_PAGE,\n  GOBACK_PAGE,\n  RESET_PAGINATION,\n  GET_COUNTRIES,\n  RECIVED_COUNTRIES,\n  RECIVED_DETAIL,\n  FILTER_COUNTRIES,\n} from \"../actions\";\nimport filterCountriesBy from \"../helperFunctions/filterCountriesBy\";\n\nconst STEP = 10;\n\nconst initialState = {\n  countriesList: [],\n  filteredCountries: [],\n  filtersApplied: {\n    continent: false,\n    activityId: false,\n    population: false,\n    name: false,\n  },\n  message: \"\",\n  countryDetail: {},\n  isLoading: false,\n  pagination: {\n    start: 0,\n    end: STEP - 1,\n    hasNext: true,\n    hasPrev: false,\n  },\n};\n\nexport default function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_COUNTRIES:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case RECIVED_COUNTRIES:\n      return {\n        ...state,\n        isLoading: false,\n        countriesList: action.payload.countries,\n        message: action.payload.message,\n      };\n    case RECIVED_DETAIL:\n      return {\n        ...state,\n        isLoading: false,\n        countryDetail: action.payload,\n      };\n    case FILTER_COUNTRIES:\n      return {\n        ...state,\n        filteredCountries: filterCountriesBy(\n          state.countriesList,\n          action.payload\n        ),\n        filtersApplied: action.payload,\n      };\n    case RESET_PAGINATION:\n      return {\n        ...state,\n        pagination: {\n          start: 0,\n          end: STEP - 1,\n          hasNext: true,\n          hasPrev: false,\n        },\n      };\n    case FORWARD_PAGE:\n      return {\n        ...state,\n        pagination: {\n          ...state.pagination,\n          start: state.pagination.end,\n          end: state.pagination.end + STEP,\n        },\n      };\n    case GOBACK_PAGE:\n      return {\n        ...state,\n        pagination: {\n          ...state.pagination,\n          start:\n            state.pagination.start - STEP >= 0\n              ? state.pagination.start - STEP\n              : 0,\n          end: state.pagination.start,\n        },\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducer\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\naxios.defaults.baseURL = process.env.REACT_APP_API || \"http://localhost:3001\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}